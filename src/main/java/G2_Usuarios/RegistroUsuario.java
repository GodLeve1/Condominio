/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package G2_Usuarios;


import java.awt.Color;
import java.awt.Cursor;
import java.awt.FlowLayout;
import java.awt.Toolkit;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.awt.event.KeyAdapter;
import java.awt.event.KeyEvent;
import javax.swing.JButton;
import javax.swing.JCheckBox;
import javax.swing.JFrame;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.JTextField;

/**
 *
 * @author JoisH
 */
public class RegistroUsuario extends javax.swing.JFrame {

     public JTextField[] textFields;
    public int currentTextFieldIndex = 0;
    public final int MAX_TEXTFIELDS = 6;
    public final Toolkit toolkit = Toolkit.getDefaultToolkit();
   // public final Sound sound = new Sound();
    String nombreUsuarioInput = "usuario"; // Obtenerlo desde JTextField
    String ciInput = "2350207219"; // Obtenerlo desde JTextField
    String pinInput = "123456";
    
    
    //Validar
    ValidarLogin validar;
    
    
    
    
    
    public RegistroUsuario() {
        validar = new ValidarLogin(nombreUsuarioInput,ciInput,pinInput,  "contraseña");
        initComponents();
        setLocationRelativeTo(null);
   
        
        setResizable(false);//no miximizar
        
        //mensajes 
        jLNC.setVisible(false);
        jLNC1.setVisible(false);
        jLNC2.setVisible(false);
        jLNC3.setVisible(false);
        jLNC4.setVisible(false);
        jLNC5.setVisible(false);






        
        CheckBoxButtonExample(jCheckBox1,jButton1 ); 
        
        
        
        
      
        //para el ping 
        DigitTextFieldDemo();
        
        
        
        
        
        
        //parra regresar a la normalidad 
        if(jTFContraseñaUsuario.equals("")){
        jLNC4.setText("*Por favor, ingresa una contraseña (12+carácteres especiales)");
        jLNC4.setForeground(java.awt.Color.orange);//color de letras
        }
        
        if(jTFContraseñaUsuario1.equals("")){
        jLNC5.setText("*Por favor, ingresa una contraseña (12+carácteres especiales)");
        jLNC5.setForeground(java.awt.Color.orange);//color de letras
        }
    }
    
    
    
    
    
    
    

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jDialog1 = new javax.swing.JDialog();
        jDialog2 = new javax.swing.JDialog();
        jToolBar1 = new javax.swing.JToolBar();
        jPanel1 = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        jTFApeCUsuario = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        jTFNomCUsuario = new javax.swing.JTextField();
        jTFEmailUsuario = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jTFUsuario = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        jTFContraseñaUsuario = new javax.swing.JPasswordField();
        jLabel1 = new javax.swing.JLabel();
        jLNC = new javax.swing.JLabel();
        jLNC1 = new javax.swing.JLabel();
        jLNC2 = new javax.swing.JLabel();
        jLNC3 = new javax.swing.JLabel();
        jLNC4 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        jCheckBox1 = new javax.swing.JCheckBox();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTextArea1 = new javax.swing.JTextArea();
        jTFContraseñaUsuario1 = new javax.swing.JPasswordField();
        jLNC5 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jComboBox1 = new javax.swing.JComboBox<>();
        jLabel10 = new javax.swing.JLabel();

        javax.swing.GroupLayout jDialog1Layout = new javax.swing.GroupLayout(jDialog1.getContentPane());
        jDialog1.getContentPane().setLayout(jDialog1Layout);
        jDialog1Layout.setHorizontalGroup(
            jDialog1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 400, Short.MAX_VALUE)
        );
        jDialog1Layout.setVerticalGroup(
            jDialog1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 300, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout jDialog2Layout = new javax.swing.GroupLayout(jDialog2.getContentPane());
        jDialog2.getContentPane().setLayout(jDialog2Layout);
        jDialog2Layout.setHorizontalGroup(
            jDialog2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 400, Short.MAX_VALUE)
        );
        jDialog2Layout.setVerticalGroup(
            jDialog2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 300, Short.MAX_VALUE)
        );

        jToolBar1.setRollover(true);

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jPanel1MouseClicked(evt);
            }
        });

        jLabel3.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel3.setText("Nombre");
        jLabel3.setAutoscrolls(true);
        jLabel3.setDoubleBuffered(true);
        jLabel3.setFocusCycleRoot(true);
        jLabel3.setFocusTraversalPolicyProvider(true);

        jTFApeCUsuario.setBorder(null);
        jTFApeCUsuario.setCaretColor(new java.awt.Color(255, 255, 255));
        jTFApeCUsuario.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTFApeCUsuarioMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                jTFApeCUsuarioMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                jTFApeCUsuarioMouseExited(evt);
            }
        });
        jTFApeCUsuario.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTFApeCUsuarioActionPerformed(evt);
            }
        });
        jTFApeCUsuario.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jTFApeCUsuarioKeyPressed(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jTFApeCUsuarioKeyTyped(evt);
            }
        });

        jLabel4.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel4.setText("Apellido");
        jLabel4.setAutoscrolls(true);
        jLabel4.setDoubleBuffered(true);
        jLabel4.setFocusCycleRoot(true);
        jLabel4.setFocusTraversalPolicyProvider(true);

        jTFNomCUsuario.setBorder(null);
        jTFNomCUsuario.setCaretColor(new java.awt.Color(255, 255, 255));
        jTFNomCUsuario.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTFNomCUsuarioMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                jTFNomCUsuarioMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                jTFNomCUsuarioMouseExited(evt);
            }
        });
        jTFNomCUsuario.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTFNomCUsuarioActionPerformed(evt);
            }
        });
        jTFNomCUsuario.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jTFNomCUsuarioKeyPressed(evt);
            }
        });

        jTFEmailUsuario.setBorder(null);
        jTFEmailUsuario.setCaretColor(new java.awt.Color(255, 255, 255));
        jTFEmailUsuario.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTFEmailUsuarioMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                jTFEmailUsuarioMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                jTFEmailUsuarioMouseExited(evt);
            }
        });
        jTFEmailUsuario.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTFEmailUsuarioActionPerformed(evt);
            }
        });
        jTFEmailUsuario.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jTFEmailUsuarioKeyPressed(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jTFEmailUsuarioKeyTyped(evt);
            }
        });

        jLabel6.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel6.setText("Email");
        jLabel6.setAutoscrolls(true);
        jLabel6.setDoubleBuffered(true);
        jLabel6.setFocusCycleRoot(true);
        jLabel6.setFocusTraversalPolicyProvider(true);

        jLabel7.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel7.setText("Nombre de Usuario");
        jLabel7.setAutoscrolls(true);
        jLabel7.setDoubleBuffered(true);
        jLabel7.setFocusCycleRoot(true);
        jLabel7.setFocusTraversalPolicyProvider(true);

        jTFUsuario.setBorder(null);
        jTFUsuario.setCaretColor(new java.awt.Color(255, 255, 255));
        jTFUsuario.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTFUsuarioMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                jTFUsuarioMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                jTFUsuarioMouseExited(evt);
            }
        });
        jTFUsuario.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTFUsuarioActionPerformed(evt);
            }
        });
        jTFUsuario.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jTFUsuarioKeyPressed(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jTFUsuarioKeyTyped(evt);
            }
        });

        jLabel8.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel8.setText("Contraseña");
        jLabel8.setAutoscrolls(true);
        jLabel8.setDoubleBuffered(true);
        jLabel8.setFocusCycleRoot(true);
        jLabel8.setFocusTraversalPolicyProvider(true);

        jTFContraseñaUsuario.setBorder(null);
        jTFContraseñaUsuario.setCaretColor(new java.awt.Color(255, 255, 255));
        jTFContraseñaUsuario.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTFContraseñaUsuarioMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                jTFContraseñaUsuarioMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                jTFContraseñaUsuarioMouseExited(evt);
            }
        });
        jTFContraseñaUsuario.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTFContraseñaUsuarioActionPerformed(evt);
            }
        });
        jTFContraseñaUsuario.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jTFContraseñaUsuarioKeyPressed(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jTFContraseñaUsuarioKeyTyped(evt);
            }
        });

        jLabel1.setText("Registrar Usuario");

        jLNC.setForeground(new java.awt.Color(255, 102, 0));
        jLNC.setText("*Por favor, ingresa tus nombres completos");

        jLNC1.setForeground(new java.awt.Color(255, 102, 0));
        jLNC1.setText("*Por favor, ingresa tus apellidos completos");

        jLNC2.setForeground(new java.awt.Color(255, 102, 0));
        jLNC2.setText("*Por favor, ingresa tu cédula de identidad");

        jLNC3.setForeground(new java.awt.Color(255, 102, 0));
        jLNC3.setText("*Por favor, ingresa un nombre de usuario");

        jLNC4.setForeground(new java.awt.Color(255, 102, 0));
        jLNC4.setText("*Por favor, ingresa una contraseña (12+carácteres especiales)");

        jButton1.setText("Registrar Usuario");
        jButton1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButton1MouseClicked(evt);
            }
        });

        jCheckBox1.setText("Aceptar los términos y condiciones");
        jCheckBox1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jCheckBox1MouseClicked(evt);
            }
        });

        jTextArea1.setColumns(20);
        jTextArea1.setRows(5);
        jTextArea1.setText("Condiciones de Uso del Sistema \n\nBienvenido al Sistema. Al utilizar este sistema, aceptas las siguientes condiciones de uso. \nPor favor, lee detenidamente antes de continuar:\n\n1. Registro de Información: Al registrarte en este sistema, te comprometes a proporcionar información precisa y actualizada sobre tu empresa, clientes, proveedores y productos.\n2. Uso Apropiado: El sistema está destinado únicamente para llevar a cabo operaciones legales y comerciales relacionadas con la gestión de clientes, proveedores, productos, compras, ventas y facturación. \nQueda estrictamente prohibido utilizar este sistema para fines ilegales, fraudulentos o maliciosos.\n3. Protección de Datos: Reconoces y aceptas que la información proporcionada, incluidos los datos personales de clientes y proveedores, se manejará de acuerdo con las leyes de protección de datos personales. \nNos comprometemos a tomar medidas para proteger la confidencialidad y seguridad de los datos almacenados en el sistema.\n4. Mal Uso del Sistema: Cualquier intento de acceso no autorizado, manipulación de datos, interrupción del servicio o cualquier otro comportamiento malicioso será tratado con seriedad. \nNos reservamos el derecho de tomar medidas legales en caso de mal uso del sistema.\n5. Cumplimiento Legal: Al utilizar este sistema, te comprometes a cumplir con todas las leyes y regulaciones relevantes, incluidas las leyes fiscales y de protección de datos.\n6. Responsabilidad: No nos hacemos responsables por pérdidas, daños o perjuicios derivados del uso del sistema, incluidos errores en los datos, interrupciones del servicio o pérdida de información.\n7. Actualización de Términos: Nos reservamos el derecho de actualizar estas condiciones de uso en cualquier momento. \nTe recomendamos revisar periódicamente estas condiciones para estar al tanto de los cambios.\n\nAl continuar utilizando el Sistema, aceptas cumplir con estas condiciones de uso.\nSi no estás de acuerdo con estas condiciones, por favor, no utilices el sistema.\n");
        jTextArea1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTextArea1MouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(jTextArea1);

        jTFContraseñaUsuario1.setBorder(null);
        jTFContraseñaUsuario1.setCaretColor(new java.awt.Color(255, 255, 255));
        jTFContraseñaUsuario1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTFContraseñaUsuario1MouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                jTFContraseñaUsuario1MouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                jTFContraseñaUsuario1MouseExited(evt);
            }
        });
        jTFContraseñaUsuario1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTFContraseñaUsuario1ActionPerformed(evt);
            }
        });
        jTFContraseñaUsuario1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jTFContraseñaUsuario1KeyPressed(evt);
            }
        });

        jLNC5.setForeground(new java.awt.Color(255, 102, 0));
        jLNC5.setText("*Por favor, ingresa nuevamente la contraseña");

        jLabel9.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel9.setText("Confirmar Contraseña");
        jLabel9.setAutoscrolls(true);
        jLabel9.setDoubleBuffered(true);
        jLabel9.setFocusCycleRoot(true);
        jLabel9.setFocusTraversalPolicyProvider(true);

        jComboBox1.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Seleccionar rol", "Guardia", "Visita", "Residente", "Administrador" }));

        jLabel10.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel10.setText("Rol");
        jLabel10.setAutoscrolls(true);
        jLabel10.setDoubleBuffered(true);
        jLabel10.setFocusCycleRoot(true);
        jLabel10.setFocusTraversalPolicyProvider(true);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(35, 35, 35)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 119, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLNC2, javax.swing.GroupLayout.PREFERRED_SIZE, 336, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 129, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLNC, javax.swing.GroupLayout.PREFERRED_SIZE, 240, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 445, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(2, 2, 2)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                        .addComponent(jComboBox1, javax.swing.GroupLayout.Alignment.LEADING, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(jTFNomCUsuario, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 445, Short.MAX_VALUE)
                                        .addComponent(jTFEmailUsuario, javax.swing.GroupLayout.Alignment.LEADING)
                                        .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel1Layout.createSequentialGroup()
                                            .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 131, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                            .addComponent(jLNC1, javax.swing.GroupLayout.PREFERRED_SIZE, 263, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel1Layout.createSequentialGroup()
                                            .addGap(2, 2, 2)
                                            .addComponent(jTFApeCUsuario)))
                                    .addComponent(jTFContraseñaUsuario1, javax.swing.GroupLayout.PREFERRED_SIZE, 438, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addComponent(jLabel9)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(jLNC5, javax.swing.GroupLayout.PREFERRED_SIZE, 272, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addComponent(jTFContraseñaUsuario, javax.swing.GroupLayout.PREFERRED_SIZE, 445, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 72, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(jLNC4, javax.swing.GroupLayout.PREFERRED_SIZE, 334, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addComponent(jTFUsuario, javax.swing.GroupLayout.PREFERRED_SIZE, 445, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addComponent(jLabel7)
                                        .addGap(18, 18, 18)
                                        .addComponent(jLNC3))
                                    .addComponent(jLabel10, javax.swing.GroupLayout.PREFERRED_SIZE, 119, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(146, 146, 146)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 218, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jCheckBox1, javax.swing.GroupLayout.PREFERRED_SIZE, 219, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(205, 205, 205)
                        .addComponent(jLabel1)))
                .addContainerGap(35, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(23, 23, 23)
                .addComponent(jLabel1)
                .addGap(26, 26, 26)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLNC))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jTFNomCUsuario, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(26, 26, 26)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLNC1))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jTFApeCUsuario, javax.swing.GroupLayout.PREFERRED_SIZE, 16, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(31, 31, 31)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLNC2))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jTFEmailUsuario, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jLabel10, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(8, 8, 8)
                .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel7)
                    .addComponent(jLNC3))
                .addGap(18, 18, 18)
                .addComponent(jTFUsuario, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel8)
                    .addComponent(jLNC4))
                .addGap(18, 18, 18)
                .addComponent(jTFContraseñaUsuario, javax.swing.GroupLayout.PREFERRED_SIZE, 19, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLNC5)
                    .addComponent(jLabel9, javax.swing.GroupLayout.DEFAULT_SIZE, 33, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 14, Short.MAX_VALUE)
                .addComponent(jTFContraseñaUsuario1, javax.swing.GroupLayout.PREFERRED_SIZE, 19, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(22, 22, 22)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 125, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jCheckBox1)
                .addGap(18, 18, 18)
                .addComponent(jButton1)
                .addGap(38, 38, 38))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jTFContraseñaUsuario1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTFContraseñaUsuario1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTFContraseñaUsuario1ActionPerformed

    private void jTFContraseñaUsuario1MouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTFContraseñaUsuario1MouseExited
        //
        
         jLNC5.setVisible(false);
    }//GEN-LAST:event_jTFContraseñaUsuario1MouseExited

    private void jTFContraseñaUsuario1MouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTFContraseñaUsuario1MouseEntered
        // TODO add your handling code here:
    }//GEN-LAST:event_jTFContraseñaUsuario1MouseEntered

    private void jTFContraseñaUsuario1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTFContraseñaUsuario1MouseClicked
        jLNC5.setVisible(true);
        
         String cedula= jTFEmailUsuario.getText();
        validar.validateCedula(cedula);
        if(!cedula.equals("")){
        if(!validar.validateCedula(cedula)){
                jTFEmailUsuario.setText("");
                jLNC2.setVisible(true);
                jLNC2.setText("*Cédula de Identidad Inválida");
            jLNC2.setForeground(java.awt.Color.red);//color de letras
        }if(validar.validateCedula(cedula)){
               
                jLNC2.setText("*Cédula de Identidad Válida");
            jLNC2.setForeground(java.awt.Color.green);//color de letras
        }
        }if(validar.validateCedula(cedula)){
               jLNC2.setVisible(false);
                jLNC2.setText("**Por favor, ingresa tu cédula de identidad");
            jLNC2.setForeground(java.awt.Color.ORANGE);//color de letras
        }
    }//GEN-LAST:event_jTFContraseñaUsuario1MouseClicked

    private void jButton1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton1MouseClicked
 String cedula= jTFEmailUsuario.getText();
        validar.validateCedula(cedula);
        if(!cedula.equals("")){
        if(!validar.validateCedula(cedula)){
                jTFEmailUsuario.setText("");
                jLNC2.setVisible(true);
                jLNC2.setText("*Cédula de Identidad Inválida");
            jLNC2.setForeground(java.awt.Color.red);//color de letras
        }if(validar.validateCedula(cedula)){
               
                jLNC2.setText("*Cédula de Identidad Válida");
            jLNC2.setForeground(java.awt.Color.green);//color de letras
        }
        }if(validar.validateCedula(cedula)){
               jLNC2.setVisible(false);
                jLNC2.setText("**Por favor, ingresa tu cédula de identidad");
            jLNC2.setForeground(java.awt.Color.ORANGE);//color de letras
        }


        if (!jButton1.isEnabled()) {
            JOptionPane.showMessageDialog(null,
                "Debe aceptar los términos y condiciones para continuar",
                "Error",
                JOptionPane.INFORMATION_MESSAGE);
        }if (jButton1.isEnabled()) {
            Login frame= new Login();
            frame.setVisible(true);
            //Login
            setVisible(false);}
    }//GEN-LAST:event_jButton1MouseClicked

    private void jTFContraseñaUsuarioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTFContraseñaUsuarioActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTFContraseñaUsuarioActionPerformed

    private void jTFContraseñaUsuarioMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTFContraseñaUsuarioMouseExited
        setCursor(Cursor.getDefaultCursor());
        jLNC4.setVisible(false);
    }//GEN-LAST:event_jTFContraseñaUsuarioMouseExited

    private void jTFContraseñaUsuarioMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTFContraseñaUsuarioMouseEntered
 //parra regresar a la normalidad 
        if(jTFContraseñaUsuario.equals(null)){
        jLNC4.setText("*Por favor, ingresa una contraseña (12+carácteres especiales)");
        jLNC4.setForeground(java.awt.Color.orange);//color de letras
        }
        setCursor(Cursor.getPredefinedCursor(Cursor.TEXT_CURSOR));
    }//GEN-LAST:event_jTFContraseñaUsuarioMouseEntered

    private void jTFContraseñaUsuarioMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTFContraseñaUsuarioMouseClicked
 //parra regresar a la normalidad 
        if(jTFContraseñaUsuario.equals("")){
        jLNC4.setText("*Por favor, ingresa una contraseña (12+carácteres especiales)");
        jLNC4.setForeground(java.awt.Color.orange);//color de letras
        }


        jLNC4.setVisible(true);
        
        
        
         String cedula= jTFEmailUsuario.getText();
        validar.validateCedula(cedula);
        if(!cedula.equals("")){
        if(!validar.validateCedula(cedula)){
                jTFEmailUsuario.setText("");
                jLNC2.setVisible(true);
                jLNC2.setText("*Cédula de Identidad Inválida");
            jLNC2.setForeground(java.awt.Color.red);//color de letras
        }if(validar.validateCedula(cedula)){
               
                jLNC2.setText("*Cédula de Identidad Válida");
            jLNC2.setForeground(java.awt.Color.green);//color de letras
        }
        }if(validar.validateCedula(cedula)){
               jLNC2.setVisible(false);
                jLNC2.setText("**Por favor, ingresa tu cédula de identidad");
            jLNC2.setForeground(java.awt.Color.ORANGE);//color de letras
        }
    }//GEN-LAST:event_jTFContraseñaUsuarioMouseClicked

    private void jTFUsuarioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTFUsuarioActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTFUsuarioActionPerformed

    private void jTFUsuarioMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTFUsuarioMouseExited
        jLNC3.setVisible(false);
    }//GEN-LAST:event_jTFUsuarioMouseExited

    private void jTFUsuarioMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTFUsuarioMouseEntered
        // TODO add your handling code here:
    }//GEN-LAST:event_jTFUsuarioMouseEntered

    private void jTFUsuarioMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTFUsuarioMouseClicked
        jLNC3.setVisible(true);
        String cedula= jTFEmailUsuario.getText();
        validar.validateCedula(cedula);
        if(!cedula.equals("")){
        if(!validar.validateCedula(cedula)){
                jTFEmailUsuario.setText("");
                jLNC2.setVisible(true);
                jLNC2.setText("*Cédula de Identidad Inválida");
            jLNC2.setForeground(java.awt.Color.red);//color de letras
        }if(validar.validateCedula(cedula)){
               
                jLNC2.setText("*Cédula de Identidad Válida");
            jLNC2.setForeground(java.awt.Color.green);//color de letras
        }
        }if(validar.validateCedula(cedula)){
               jLNC2.setVisible(false);
                jLNC2.setText("**Por favor, ingresa tu cédula de identidad");
            jLNC2.setForeground(java.awt.Color.ORANGE);//color de letras
        }
        
        
        
        
    }//GEN-LAST:event_jTFUsuarioMouseClicked

    private void jTFEmailUsuarioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTFEmailUsuarioActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTFEmailUsuarioActionPerformed

    private void jTFEmailUsuarioMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTFEmailUsuarioMouseExited
        jLNC2.setVisible(false);
    }//GEN-LAST:event_jTFEmailUsuarioMouseExited

    private void jTFEmailUsuarioMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTFEmailUsuarioMouseEntered
        // TODO add your handling code here:
    }//GEN-LAST:event_jTFEmailUsuarioMouseEntered

    private void jTFEmailUsuarioMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTFEmailUsuarioMouseClicked
        jLNC2.setVisible(true);
        if(jTFEmailUsuario.equals("")){
        jLNC2.setText("**Por favor, ingresa tu cédula de identidad");
            jLNC2.setForeground(java.awt.Color.ORANGE);//color de letras
        }
    }//GEN-LAST:event_jTFEmailUsuarioMouseClicked

    private void jTFNomCUsuarioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTFNomCUsuarioActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTFNomCUsuarioActionPerformed

    private void jTFNomCUsuarioMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTFNomCUsuarioMouseExited
        jLNC.setVisible(false);
    }//GEN-LAST:event_jTFNomCUsuarioMouseExited

    private void jTFNomCUsuarioMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTFNomCUsuarioMouseEntered
        // TODO add your handling code here:
    }//GEN-LAST:event_jTFNomCUsuarioMouseEntered

    private void jTFNomCUsuarioMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTFNomCUsuarioMouseClicked

        jLNC.setVisible(true);
        
        
        
         String cedula= jTFEmailUsuario.getText();
        validar.validateCedula(cedula);
        if(!cedula.equals("")){
        if(!validar.validateCedula(cedula)){
                jTFEmailUsuario.setText("");
                jLNC2.setVisible(true);
                jLNC2.setText("*Cédula de Identidad Inválida");
            jLNC2.setForeground(java.awt.Color.red);//color de letras
        }if(validar.validateCedula(cedula)){
               
                jLNC2.setText("*Cédula de Identidad Válida");
            jLNC2.setForeground(java.awt.Color.green);//color de letras
        }
        }if(validar.validateCedula(cedula)){
               jLNC2.setVisible(false);
                jLNC2.setText("**Por favor, ingresa tu cédula de identidad");
            jLNC2.setForeground(java.awt.Color.ORANGE);//color de letras
        }
    }//GEN-LAST:event_jTFNomCUsuarioMouseClicked

    private void jTFApeCUsuarioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTFApeCUsuarioActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTFApeCUsuarioActionPerformed

    private void jTFApeCUsuarioMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTFApeCUsuarioMouseExited
        setCursor(Cursor.getDefaultCursor());
        jLNC1.setVisible(false);
    }//GEN-LAST:event_jTFApeCUsuarioMouseExited

    private void jTFApeCUsuarioMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTFApeCUsuarioMouseEntered
        setCursor(Cursor.getPredefinedCursor(Cursor.TEXT_CURSOR));
    }//GEN-LAST:event_jTFApeCUsuarioMouseEntered

    private void jTFApeCUsuarioMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTFApeCUsuarioMouseClicked
        jLNC1.setVisible(true);
         String cedula= jTFEmailUsuario.getText();
        validar.validateCedula(cedula);
        if(!cedula.equals("")){
        if(!validar.validateCedula(cedula)){
                jTFEmailUsuario.setText("");
                jLNC2.setVisible(true);
                jLNC2.setText("*Cédula de Identidad Inválida");
            jLNC2.setForeground(java.awt.Color.red);//color de letras
        }if(validar.validateCedula(cedula)){
               
                jLNC2.setText("*Cédula de Identidad Válida");
            jLNC2.setForeground(java.awt.Color.green);//color de letras
        }
        }if(validar.validateCedula(cedula)){
               jLNC2.setVisible(false);
                jLNC2.setText("**Por favor, ingresa tu cédula de identidad");
            jLNC2.setForeground(java.awt.Color.ORANGE);//color de letras
        }
        
        
    }//GEN-LAST:event_jTFApeCUsuarioMouseClicked

    private void jTFContraseñaUsuarioKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTFContraseñaUsuarioKeyPressed
 //parra regresar a la normalidad 
        if(jTFContraseñaUsuario.equals("")){
        jLNC4.setText("*Por favor, ingresa una contraseña (12+carácteres especiales)");
        jLNC4.setForeground(java.awt.Color.orange);//color de letras
        }



        validar.PasswordStrengthVerifier(jTFContraseñaUsuario, jLNC4);
    jTFContraseñaUsuario.addKeyListener(new KeyAdapter() {
   
        public void keyTyped(KeyEvent e) {
        char c = e.getKeyChar();
        if (!Character.isLetter(c) && !Character.isDigit(c)&& c != '.' && c != '-' && c != '*' && c != '/' && c != '_'  && c != 'ñ' && c != 'Ñ' ) {
            Toolkit.getDefaultToolkit().beep(); // Emite un sonido de alerta
            e.consume();
             //parra regresar a la normalidad 
        if(jTFContraseñaUsuario.equals("")){
        jLNC4.setText("*Por favor, ingresa una contraseña (12+carácteres especiales)");
        jLNC4.setForeground(java.awt.Color.orange);//color de letras
        }
        }
    }

          
    public void keyPressed(KeyEvent e) {
        if (e.getKeyChar() == KeyEvent.VK_SPACE) {
            Toolkit.getDefaultToolkit().beep(); // Emite un sonido de alerta
            e.consume();
        }
    }
});
    }//GEN-LAST:event_jTFContraseñaUsuarioKeyPressed

    private void jTFContraseñaUsuario1KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTFContraseñaUsuario1KeyPressed
       validar.PasswordStrengthVerifier(jTFContraseñaUsuario1, jLNC4);
    jTFContraseñaUsuario1.addKeyListener(new KeyAdapter() {
   
        public void keyTyped(KeyEvent e) {
        char c = e.getKeyChar();
        if (!Character.isLetter(c) && c != '.'&& !Character.isDigit(c) && c != '-' && c != '*' && c != '/' && c != '_'  && c != 'ñ' && c != 'Ñ' ) {
            Toolkit.getDefaultToolkit().beep(); // Emite un sonido de alerta
            e.consume();
        }
    }

          
    public void keyPressed(KeyEvent e) {
        if (e.getKeyChar() == KeyEvent.VK_SPACE) {
            Toolkit.getDefaultToolkit().beep(); // Emite un sonido de alerta
            e.consume();
        }
    }
});
    }//GEN-LAST:event_jTFContraseñaUsuario1KeyPressed

    private void jTFNomCUsuarioKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTFNomCUsuarioKeyPressed
          jTFNomCUsuario.addKeyListener(new KeyAdapter() {
    public void keyTyped(KeyEvent e) {
        char c = e.getKeyChar();
       if (!Character.isLetter(c) && c != 'á' && c != 'é' && c != 'í' && c != 'ó' && c != 'ú' && c != 'Á' && c != 'É' && c != 'Í' && c != 'Ó' && c != 'Ú' && c != 'ñ' && c != 'Ñ' && c != ' ') {
            Toolkit.getDefaultToolkit().beep(); // Emite un sonido de alerta
            e.consume();
        }
    }
});
    }//GEN-LAST:event_jTFNomCUsuarioKeyPressed

    private void jTFApeCUsuarioKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTFApeCUsuarioKeyTyped
         jTFApeCUsuario.addKeyListener(new KeyAdapter() {
    public void keyTyped(KeyEvent e) {
        char c = e.getKeyChar();
       if (!Character.isLetter(c) && c != 'á' && c != 'é' && c != 'í' && c != 'ó' && c != 'ú' && c != 'Á' && c != 'É' && c != 'Í' && c != 'Ó' && c != 'Ú' && c != 'ñ' && c != 'Ñ' && c != ' ') {
            Toolkit.getDefaultToolkit().beep(); // Emite un sonido de alerta
            e.consume();
        }
    }
});
    }//GEN-LAST:event_jTFApeCUsuarioKeyTyped

    private void jTFApeCUsuarioKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTFApeCUsuarioKeyPressed
           jTFApeCUsuario.addKeyListener(new KeyAdapter() {
    public void keyTyped(KeyEvent e) {
        char c = e.getKeyChar();
       if (!Character.isLetter(c) && c != 'á' && c != 'é' && c != 'í' && c != 'ó' && c != 'ú' && c != 'Á' && c != 'É' && c != 'Í' && c != 'Ó' && c != 'Ú' && c != 'ñ' && c != 'Ñ' && c != ' ') {
            Toolkit.getDefaultToolkit().beep(); // Emite un sonido de alerta
            e.consume();
        }
    }
});
    }//GEN-LAST:event_jTFApeCUsuarioKeyPressed

    private void jTFEmailUsuarioKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTFEmailUsuarioKeyPressed
 jTFEmailUsuario.addKeyListener(new KeyAdapter() {
            @Override
            public void keyPressed(KeyEvent e) {
                String cedula = jTFEmailUsuario.getText();

                /*if (e.getKeyCode() == KeyEvent.VK_ENTER) {
                    if (!cedula.equals("")) {
                        if (!validar.validateCedula(cedula)) {
                            jTFEmailUsuario.setText("");
                            jLNC2.setVisible(true);
                            jLNC2.setText("*Cédula de Identidad Inválida");
                            jLNC2.setForeground(java.awt.Color.RED);
                        } else {
                            jLNC2.setText("*Cédula de Identidad Válida");
                            jLNC2.setForeground(java.awt.Color.GREEN);
                        }
                    } else {
                        jLNC2.setVisible(false);
                    }
                }*/
            }
        });
    }//GEN-LAST:event_jTFEmailUsuarioKeyPressed

    private void jTFContraseñaUsuarioKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTFContraseñaUsuarioKeyTyped
       //parra regresar a la normalidad 
        if(jTFContraseñaUsuario.equals("")){
        jLNC4.setText("*Por favor, ingresa una contraseña (12+carácteres especiales)");
        jLNC4.setForeground(java.awt.Color.orange);//color de letras
        }
    }//GEN-LAST:event_jTFContraseñaUsuarioKeyTyped

    private void jTFUsuarioKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTFUsuarioKeyPressed
  
    }//GEN-LAST:event_jTFUsuarioKeyPressed

    private void jTFUsuarioKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTFUsuarioKeyTyped
    jTFUsuario.addKeyListener(new KeyAdapter() {
            public void keyTyped(KeyEvent e) {
                char c = e.getKeyChar();
                if (!Character.isLetter(c) && !Character.isDigit(c)  && c != 'ñ' && c != 'Ñ' && c != '_'&& c != '.'&&  c==' ') {
                    Toolkit.getDefaultToolkit().beep(); // Emite un sonido de alerta
                    e.consume();
                }
            }

            public void keyPressed(KeyEvent e) {
                if (e.getKeyChar() == KeyEvent.VK_SPACE) {
                    Toolkit.getDefaultToolkit().beep(); // Emite un sonido de alerta
                    e.consume();
                }
            }
        });
    }//GEN-LAST:event_jTFUsuarioKeyTyped

    private void jPanel1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jPanel1MouseClicked
         String cedula= jTFEmailUsuario.getText();
        validar.validateCedula(cedula);
        if(!cedula.equals("")){
        if(!validar.validateCedula(cedula)){
                jTFEmailUsuario.setText("");
                jLNC2.setVisible(true);
                jLNC2.setText("*Cédula de Identidad Inválida");
            jLNC2.setForeground(java.awt.Color.red);//color de letras
        }if(validar.validateCedula(cedula)){
               
                jLNC2.setText("*Cédula de Identidad Válida");
            jLNC2.setForeground(java.awt.Color.green);//color de letras
        }
        }if(validar.validateCedula(cedula)){
               jLNC2.setVisible(false);
                jLNC2.setText("**Por favor, ingresa tu cédula de identidad");
            jLNC2.setForeground(java.awt.Color.ORANGE);//color de letras
        }
    }//GEN-LAST:event_jPanel1MouseClicked

    private void jTextArea1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTextArea1MouseClicked
         String cedula= jTFEmailUsuario.getText();
        validar.validateCedula(cedula);
        if(!cedula.equals("")){
        if(!validar.validateCedula(cedula)){
                jTFEmailUsuario.setText("");
                jLNC2.setVisible(true);
                jLNC2.setText("*Cédula de Identidad Inválida");
            jLNC2.setForeground(java.awt.Color.red);//color de letras
        }if(validar.validateCedula(cedula)){
               
                jLNC2.setText("*Cédula de Identidad Válida");
            jLNC2.setForeground(java.awt.Color.green);//color de letras
        }
        }if(validar.validateCedula(cedula)){
               jLNC2.setVisible(false);
                jLNC2.setText("**Por favor, ingresa tu cédula de identidad");
            jLNC2.setForeground(java.awt.Color.ORANGE);//color de letras
        }
    }//GEN-LAST:event_jTextArea1MouseClicked

    private void jCheckBox1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jCheckBox1MouseClicked
         String cedula= jTFEmailUsuario.getText();
        /*validar.validateCedula(cedula);
        if(!cedula.equals("")){
        if(!validar.validateCedula(cedula)){
                jTFEmailUsuario.setText("");
                jLNC2.setVisible(true);
                jLNC2.setText("*Cédula de Identidad Inválida");
            jLNC2.setForeground(java.awt.Color.red);//color de letras
        }if(validar.validateCedula(cedula)){
               
                jLNC2.setText("*Cédula de Identidad Válida");
            jLNC2.setForeground(java.awt.Color.green);//color de letras
        }
        }if(validar.validateCedula(cedula)){
               jLNC2.setVisible(false);
                jLNC2.setText("**Por favor, ingresa tu cédula de identidad");
            jLNC2.setForeground(java.awt.Color.ORANGE);//color de letras
        }*/
    }//GEN-LAST:event_jCheckBox1MouseClicked

    private void jTFEmailUsuarioKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTFEmailUsuarioKeyTyped
jTFEmailUsuario.addKeyListener(new KeyAdapter() {
    public void keyTyped(KeyEvent e) {
        /*char c = e.getKeyChar();
        if (!Character.isDigit(c)) {
            Toolkit.getDefaultToolkit().beep(); // Emite un sonido de alerta
            e.consume();
        }*/
    }
});        // TODO add your handling code here:
    }//GEN-LAST:event_jTFEmailUsuarioKeyTyped

 public void CheckBoxButtonExample(JCheckBox  checkBox, JButton button  ) {
         button.setEnabled(false);
       

        checkBox.addActionListener(new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent e) {
                if(checkBox.isSelected()){
                button.setEnabled(checkBox.isSelected()); // Habilitar el botón si el checkbox está seleccionado
                 jCheckBox1.setForeground(java.awt.Color.ORANGE);//color de letras
                }else{
                jCheckBox1.setForeground(java.awt.Color.white);//color de letras
                }
                
            }
        });

        button.addActionListener(new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent e) {
                if (checkBox.isSelected()) {
                    // Lógica para lo que sucede cuando se presiona el botón
                    JOptionPane.showMessageDialog(null, 
                            "Registro Exitoso",
                            "Mensaje",
                            JOptionPane.INFORMATION_MESSAGE);
                    if (jButton1.isEnabled()) {
                        Login frame= new Login();
                         frame.setVisible(true);
                            //Login
                            setVisible(false);}
                    
                    
                    
                } else {
                    // Mostrar mensaje si el checkbox no está seleccionado
                    JOptionPane.showMessageDialog(null,
                            "Debe aceptar los términos y condiciones para continuar",
                            "Error",
                            JOptionPane.ERROR_MESSAGE);
                }
            }
        });

        setVisible(true);
    }
    
 
 
 
 
 public void DigitTextFieldDemo() {
        /*textFields = new JTextField[MAX_TEXTFIELDS];
        textFields[0] = jTPin1;
        textFields[1] = jTPin2;
        textFields[2] = jTPin3;
        textFields[3] = jTPin4;
        textFields[4] = jTPin5;
        textFields[5] = jTPin6;
        
        // Aquí debes asignar tus JTextField previamente creados
        // por ejemplo: textFields[0] = jTextField1;
        //              textFields[1] = jTextField2;
        //              ... y así sucesivamente

        setupTextField(textFields[0]);
        setupTextField(textFields[1]);
        setupTextField(textFields[2]);
        setupTextField(textFields[3]);
        setupTextField(textFields[4]);
        setupTextField(textFields[5]);
        setupTextField(textFields[6]);
         setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
        setLayout(new FlowLayout());
        pack();
        setVisible(true);*/
    }


   ///aqui valida lo de que haya solo un caracter ingresado en cada textfield e ingrese el siguiente valor en el proximo jtextfield
  private void setupTextField(JTextField textField) {
        textField.addKeyListener(new KeyAdapter() {
            @Override
            public void keyTyped(KeyEvent e) {
                char c = e.getKeyChar();
                if (!Character.isDigit(c)) {
                    e.consume();
                } else {
                    textField.setText(String.valueOf(c));
                    moveToNextTextField(textField);
                    e.consume();
                }
            }
        });
    }

    private void moveToNextTextField(JTextField currentTextField) {
        int currentIndex = -1;
        for (int i = 0; i < MAX_TEXTFIELDS; i++) {
            if (textFields[i] == currentTextField) {
                currentIndex = i;
                break;
            }
        }

        if (currentIndex == MAX_TEXTFIELDS - 1) {
            textFields[0].requestFocus();
        } else if (currentIndex + 1 < MAX_TEXTFIELDS) {
            textFields[currentIndex + 1].requestFocus();
        }
    }

 
   
    
    //Aqui recopila todo el contenido de todos los jtextfield para el ping de seguridad 
    public String gatherTextFieldsContent() {
        StringBuilder content = new StringBuilder();

        for (JTextField textField : textFields) {
            content.append(textField.getText());
        }

        return content.toString();
    }
    
    
    
    
    
  
    
    
    //valida solo ingreso de letras
    private boolean isAlphabeticString(String str) {
    // Check if the string is at most 50 characters long.
    if (str.length() > 50) {
        return false;
    }

    // Check if the string contains only letters and special characters.
    if (!str.matches("[a-zA-ZáéíóúÁÉÍÓÚñÑ ]+")) {
        return false;
    }

    // The string is valid.
    return true;
}
    
    
    
    
    
     
    
    public static void main(String args[]) {
        //Getting started--FlatLaf - Flat Look and Feel

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new RegistroUsuario().setVisible(true);
                 
            }
        });
    }
    
    
    
    
    
    
    
    
    
    
    

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JCheckBox jCheckBox1;
    private javax.swing.JComboBox<String> jComboBox1;
    private javax.swing.JDialog jDialog1;
    private javax.swing.JDialog jDialog2;
    private javax.swing.JLabel jLNC;
    private javax.swing.JLabel jLNC1;
    private javax.swing.JLabel jLNC2;
    private javax.swing.JLabel jLNC3;
    private javax.swing.JLabel jLNC4;
    private javax.swing.JLabel jLNC5;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTextField jTFApeCUsuario;
    private javax.swing.JPasswordField jTFContraseñaUsuario;
    private javax.swing.JPasswordField jTFContraseñaUsuario1;
    private javax.swing.JTextField jTFEmailUsuario;
    private javax.swing.JTextField jTFNomCUsuario;
    private javax.swing.JTextField jTFUsuario;
    private javax.swing.JTextArea jTextArea1;
    private javax.swing.JToolBar jToolBar1;
    // End of variables declaration//GEN-END:variables
}
